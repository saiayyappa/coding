Integers with Digit X
The program must accept two integers N and X as the input. The program must print the integers from 1 to N which contains the digit X. If there
is no such integer then the program must print -1 as the output.
Boundary Condition(s):
1 <= N <= 10^5
0 <= X <= 9
Input Format:
The first line contains the values of N and X separated by a space.
Output Format:
The first line contains either the integers from 1 to N which contains the digit X separated by a space or -1.
Example Input/Output 1:
Input:
40 7
Output:
7 17 27 37
Explanation:
The integers from 1 to 40 having the digit 7 are 7, 17, 27, 37
The remaining integers do not contain the digit 7.
Hence the output is 7 17 27 37
Example Input/Output 2:
Input:
5 9
Output:
-1




a,b=map(int,input().split())
f=0
for i in range(1,a+1):
    if str(b) in str(i):
        print(i)
        f=1
if f==0:
    print("-1")



import java.util.*;
public class Hello
{
    public static void main(String[] args)
    {
        Scanner s=new Scanner(System.in);
        String n=s.next();
        String x=s.next();
        int i,f=0;
        for(i=1;i<=Integer.parseInt(n);i++)
        {
            if(Integer.toString(i).contains(x))
            {
            System.out.println(i);
            f=1;
            }
        }
        if(f==0)
        System.out.print("-1");
	}
}



#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n,x,i,j,f=0;
    scanf("%d %d",&n,&x);
    for(i=1;i<=n;i++)
    {
        j=i;
        while(j>0)
        {
            if(j%10==x)
            {
                printf("%d ",i);
                f=1;
                break;
            }
            j/=10;
        }
    }
    if(f==0)
    printf("-1");
}
