Maximum Sum Value
The program must accept an integer array of size N as the input. The program must print the maximum sum of the increasing order of the
integers in the given array as the output.
Boundary Condition(s):
3 <= N <= 999
Input Format:
The first line contains the value of N.
The second line contains the N integers separated by space(s).
Output Format:
The first line contains the maximum sum of the increasing order of the integers.
Example Input/Output 1:
Input:
7
1 2 1 7 10 9 5
Output:
18
Explanation:
The increasing order of integers in the array are
1 2 (sum is 3)
1 7 10 (sum is 18)
18 is the maximum sum between the two sum values.
Hence, 18 is printed as the output.
Example Input/Output 2:
Input:
5
1 5 6 8 9
Output:
29



#include<stdio.h>
#include <stdlib.h>
int main()
{
    int n,i,j=0,a[1000],l,b[1000],s,c[1000];
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
    scanf("%d",&a[i]);
    c[i]=a[i];
    }
    s=c[0];
    for(i=1;i<n;i++)
    {
        if(c[i]>s)
        s=c[i];
    }
    for(i=0;i<n;i++)
    {
        if(a[i]<a[i+1])
        {
            if(b[j]==0)
        b[j]=a[i]+a[i+1];
        else
        b[j]+=a[i+1];
        }
        else
        j++;
    }
    l=b[0];
    for(i=0;i<=j;i++)
    {
     if(b[i]>l)
     l=b[i];
    }
    if(l>s)
    printf("%d",l);
    else
    printf("%d",s);
}
